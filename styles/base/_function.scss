@function strip-unit($number) {
    @return $number / ($number * 0 + 1);
  }
  
  @function convert-rem($value: 16) {
    $unitRem: 1rem;
    $rem-target: $value / 16;
    @if ($value == 0) {
      @return $value;
    }
    @return $rem-target * $unitRem;
  }
  
  @function convert-vw($value: 16, $vw: 320) {
    $unitVw: 1vw;
    $vw-target: $vw * 0.01;
    @if ($value == 0) {
      @return $value;
    }
    @return $value / $vw-target * $unitVw;
  }
  
  @function get-vw($value: 16, $vw: 320) {
    @if (type-of($value) == "number" and type-of($vw) == "number") {
      $unit: unit($value);
      $number: strip-unit($value);
      @if ($unit == "rem") {
        // $value-px: $number * 16;
        @return $value;
      } @else if ($unit == "px") {
        @return convert-rem($number);
      } @else if ($unit == "") {
        @return convert-rem($number);
      }
    } @else {
      @warn 'Not a number';
    }
  }
  
  // Feference : https://en.wikipedia.org/wiki/YIQ
  
  @function color-yiq($background) {
    $r: red($background);
    $g: green($background);
    $b: blue($background);
  
    $yiq: (($r * 299) + ($g * 587) + ($b * 114))/1000;
    @if ($yiq >= 128) {
      @return $body-color;
    } @else {
      @return $white;
    }
  }
  
  // Return valid calc
  @function add($value1, $value2, $return-calc: true) {
    @if $value1 == null {
      @return $value2;
    }
  
    @if $value2 == null {
      @return $value1;
    }
  
    @if type-of($value1) == number and type-of($value2) == number and comparable($value1, $value2) {
      @return $value1 + $value2;
    }
  
    @return if($return-calc == true, calc(#{$value1} + #{$value2}), $value1 + unquote(" + ") + $value2);
  }
  
  // Remove unit
  @function rm-unit($number) {
    @if (type-of($number) == "number") {
      @return $number / ($number * 0 + 1);
    }
  }
  
  // Set line-height
  @function set-lh-em($fs, $ln) {
    @if (type-of($fs) == "number" and type-of($ln) == "number") {
      $fs: rm-unit($fs);
      $ln: rm-unit($ln);
      $ln-em: $ln / $fs;
      @if ($ln >= $fs) {
        @return $ln-em;
      }
    }
  }
  
  // Set line-height
  @function get-spacing-by-ln($spacing, $fs, $ln) {
    @if (type-of($spacing) == "number" and type-of($fs) == "number" and type-of($ln) == "number") {
      $spacing: rm-unit($spacing);
      $fs: rm-unit($fs);
      $ln: rm-unit($ln);
      $result-spacing: $spacing - ($ln - $fs) / 2;
      @if ($ln >= $fs and $result-spacing > 0) {
        @return $result-spacing * 1px;
      } @else {
        @return $spacing * 1px;
      }
    }
  }
  
  // Convert letter spacing form px to em
  @function get-letter-spacing($letter) {
    @return $letter / 1000 * 1em;
  }
  